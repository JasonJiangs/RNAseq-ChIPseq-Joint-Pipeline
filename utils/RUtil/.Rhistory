log2FoldChange <= -0.01 & padj <= 0.05 ~ "DOWN",
TRUE ~ "NOT_CHANGE"
)) -> res_UDP
table(res_UDP$group)
# set log2foldchange
l2fg = 0
# List significantly differentially expressed genes with |log2 fold change| > 1
resSig <- res[which(res$padj < 0.05 & abs(res$log2FoldChange) > l2fg),]
print(resSig)
#save
write.csv(as.data.frame(resSig), file = "result/deseq2/deseq2_results_sig_new0.csv")
# Load necessary library
library(ggplot2)
install.packages("E:\viRandomForests_1.0.tar.gz")
install.packages("E:\\viRandomForests_1.0.tar.gz")
library(viRandomForests)
library(ggplot2)
library(RColorBrewer)
getwd()
dt = read.delim(file.choose(), row.names = 1)
##????R???Եı???ΪӢ??
Sys.setenv(LANGUAGE = "en")
##??ֹת??Ϊ????
options(stringsAsFactors = FALSE)
##???ջ???
rm(list=ls())
getwd()#?鿴??ǰ????·??
setwd('D:/GEO/video20230606/KEGG pathway')#???ù???·??Ϊ??ע??R???Բ?ʶ????б??
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
#????ͨ·ָ????ͼ˳??(ת??Ϊ????)??
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
#1?????渻??????ͼ??ͼ?? ?е??ѿ?
#???Զ??????⣺
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
#???渻??????ͼ??ͼ
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #??????ɫ
geom_bar(stat = "identity", width = 0.8) + #????????ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #?޸?/???Ӹ?????
theme_bw() + mytheme #????????
p
# 2????????ͼ?????? ?Ƽ?
#???????ֺ?????˳????ֱ???????ݱ????е???Term?????ƣ???Fold.Enrichment???????? ????
#???Զ?????????ȥ??y??ͨ·??ǩ:
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #????ɫtomato??brown4????
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar?Ŀ??Ⱥ?͸????width /alpha. ????????ͼ???ࣺ???Ϻ??? position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "KEGG enrichment term") +
geom_text(aes(x = 0.03, #????ֵ??��?????ı???ǩ??ʼλ??
label = Term),
hjust = 0, size = 4)+ #hjust = 0,??????,size??????????С
theme_classic() + mytheme2
p1
p
p1
file_path <- "data/enhancer/kegg.tsv"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
file_path <- "DAVID analysis/data/enhancer/kegg.tsv"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "Term", size = "Count", color = "PValue") +
theme_minimal()
View(enrichment_results)
View(enrichment_results)
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term, levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) +
geom_bar(stat = "identity", width = 0.8) +
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") +
theme_bw() + mytheme
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") +
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) +
labs(x = "RichFactor", y = "", title = "KEGG enrichment term") +
geom_text(aes(x = 0.03, label = Term), hjust = 0, size = 4)+heme_classic() + mytheme2
p1
file_path <- "DAVID analysis/data/enhancer/kegg.tsv"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "Term", size = "Count", color = "PValue") +
theme_minimal()
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "KEGG Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #������ɫ
geom_bar(stat = "identity", width = 0.8) + #��������ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #�޸�/���Ӹ�����
theme_bw() + mytheme #�������
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #����ɫtomato��brown4����
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar�Ŀ��Ⱥ�͸����width /alpha. ��������ͼ��ࣺ���Ϻ��� position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "KEGG enrichment term") +
geom_text(aes(x = 0.03, #����ֵ���������ı���ǩ��ʼλ��
label = Term),
hjust = 0, size = 4)+ #hjust = 0,�����,size���������С
theme_classic() + mytheme2
p1
file_path <- "DAVID analysis/data/enhancer+promoter/kegg.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
file_path <- "DAVID analysis/data/enhancer+promoter/kegg.tsv"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
file_path <- "DAVID analysis/data/enhancer/kegg.tsv"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "KEGG Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #������ɫ
geom_bar(stat = "identity", width = 0.8) + #��������ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #�޸�/���Ӹ�����
theme_bw() + mytheme #�������
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #����ɫtomato��brown4����
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar�Ŀ��Ⱥ�͸����width /alpha. ��������ͼ��ࣺ���Ϻ��� position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "KEGG enrichment term") +
geom_text(aes(x = 0.03, #����ֵ���������ı���ǩ��ʼλ��
label = Term),
hjust = 0, size = 4)+ #hjust = 0,�����,size���������С
theme_classic() + mytheme2
p1
View(dt)
library(clusterProfiler)
library(tidyverse)
library(ggplot2)
library(forcats)
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
View(enrichment_results)
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "KEGG Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
file_path <- "DAVID analysis/data/enhancer+promoter/GO BP.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "GO BP Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
file_path <- "DAVID analysis/data/enhancer+promoter/GO CC.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "GO BP Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "GO CC Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
file_path <- "DAVID analysis/data/enhancer+promoter/GO MF.txt"
# 读取 tsv 文件
enrichment_results <- read.delim(file_path, header = TRUE, sep = "\t")
# 加载所需的包
library(ggplot2)
library(clusterProfiler)
# 设置富集分析结果数据
pathway_data <- enrichment_results[, c("Term", "PValue", "Count", "GeneRatio")]
# 根据P值排序通路数据
pathway_data <- pathway_data[order(pathway_data$PValue), ]
# 选择前20个通路数据
top20_pathways <- pathway_data[1:20, ]
# 创建因子变量，按照P值从小到大的顺序排列
top20_pathways$Term <- factor(top20_pathways$Term, levels = top20_pathways$Term[order(top20_pathways$PValue)])
# 创建气泡图
ggplot(top20_pathways, aes(x = GeneRatio, y = reorder(Term, -PValue), size = Count, color = PValue)) +
geom_point(alpha = 0.8) +
scale_size_continuous(range = c(1, 3)) +
scale_color_gradient(low = "red", high = "blue") +
labs(x = "GeneRatio", y = "GO MF Enrichment Term", size = "Count", color = "PValue") +
theme_minimal()
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #������ɫ
geom_bar(stat = "identity", width = 0.8) + #��������ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #�޸�/���Ӹ�����
theme_bw() + mytheme #�������
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #����ɫtomato��brown4����
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar�Ŀ��Ⱥ�͸����width /alpha. ��������ͼ��ࣺ���Ϻ��� position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "GO CC enrichment term") +
geom_text(aes(x = 0.03, #����ֵ���������ı���ǩ��ʼλ��
label = Term),
hjust = 0, size = 4)+ #hjust = 0,�����,size���������С
theme_classic() + mytheme2
p1
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #������ɫ
geom_bar(stat = "identity", width = 0.8) + #��������ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #�޸�/���Ӹ�����
theme_bw() + mytheme #�������
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #����ɫtomato��brown4����
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar�Ŀ��Ⱥ�͸����width /alpha. ��������ͼ��ࣺ���Ϻ��� position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "GO BP enrichment term") +
geom_text(aes(x = 0.03, #����ֵ���������ı���ǩ��ʼλ��
label = Term),
hjust = 0, size = 4)+ #hjust = 0,�����,size���������С
theme_classic() + mytheme2
p1
Sys.setenv(LANGUAGE = "en")
options(stringsAsFactors = FALSE)
rm(list=ls())
getwd()
library(ggplot2)
library(RColorBrewer)
dt = read.delim(file.choose(),row.names = 1)
colnames(dt)
dt$Term <- factor(dt$Term,
levels = rev(dt$Term))
mytheme <- theme(
axis.title = element_text(size = 13),
axis.text = element_text(size = 11),
plot.title = element_text(size = 14,
hjust = 0.5,
face = "bold"),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11),
plot.margin = margin(t = 5.5,
r = 10,
l = 5.5,
b = 5.5)
)
p <- ggplot(data = dt, aes(x = Count, y = Term, fill = -log10(PValue))) +
scale_fill_distiller(palette = "RdPu",direction = 1) + #������ɫ
geom_bar(stat = "identity", width = 0.8) + #��������ͼ
labs(x = "Number of Gene", y = "", title = "KEGG enrichment barplot") + #�޸�/���Ӹ�����
theme_bw() + mytheme #�������
p
mytheme2 <- mytheme + theme(axis.text.y = element_blank())
p1 <- ggplot(data = dt, aes(x = Fold.Enrichment, y = Term, fill = -log10(PValue))) +
scale_fill_gradient(low = "tomato", high = "brown4") + #����ɫtomato��brown4����
geom_bar(stat = "identity", width = 0.8, alpha = 0.9) + #bar�Ŀ��Ⱥ�͸����width /alpha. ��������ͼ��ࣺ���Ϻ��� position = position_dodge(width = 0.5)
labs(x = "RichFactor", y = "", title = "GO MF enrichment term") +
geom_text(aes(x = 0.03, #����ֵ���������ı���ǩ��ʼλ��
label = Term),
hjust = 0, size = 4)+ #hjust = 0,�����,size���������С
theme_classic() + mytheme2
p1
